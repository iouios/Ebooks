// "use client";

// import React, { useEffect, useState } from "react";
// import { db } from "../../firebase/firebaseConfig"; 
// import { collection, getDocs } from "firebase/firestore";

// interface EbookData {
//   id: string;
//   title: string;
//   authors: string;
//   summaries: string;
//   bookshelves: string[]; 
//   languages: string[];   
// }

// const Edit: React.FC = () => {
//   const [ebooks, setEbooks] = useState<EbookData[]>([]);
//   const [loading, setLoading] = useState<boolean>(true);

//   useEffect(() => {
//     const fetchEbooks = async () => {
//       try {
//         const querySnapshot = await getDocs(collection(db, "ebooks")); 
//         const ebooksData: EbookData[] = [];
//         querySnapshot.forEach((doc) => {
//           const data = doc.data();
//           ebooksData.push({
//             id: doc.id,
//             title: data.title , 
//             authors: data.authors ,
//             summaries: data.summaries , 
//             bookshelves: data.bookshelves , 
//             languages: data.languages  
//           });
//         });
//         setEbooks(ebooksData);
//       } catch (error) {
//         console.error("Error fetching ebooks: ", error);
//       } finally {
//         setLoading(false);
//       }
//     };

//     fetchEbooks();
//   }, []);

//   if (loading) return <div>Loading...</div>;

//   return (
//     <div>
//       <h1>Ebooks</h1>
//       {ebooks.length === 0 ? (
//         <p>No ebooks found</p>
//       ) : (
//         <ul>
//           {ebooks.map((ebook) => (
//             <li key={ebook.id}>
//               <h2>{ebook.title}</h2>
//               <p><strong>Authors:</strong> {ebook.authors}</p>
//               <p><strong>Summary:</strong> {ebook.summaries}</p>
//               <p><strong>Bookshelves:</strong> {ebook.bookshelves.join(', ')}</p>
//               <p><strong>Languages:</strong> {ebook.languages.join(', ')}</p>
//             </li>
//           ))}
//         </ul>
//       )}
//     </div>
//   );
// };

// export default Edit;
